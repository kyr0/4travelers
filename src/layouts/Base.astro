---
import TwSizeIndicator from "@components/TwSizeIndicator.astro";
import { GoogleFontsOptimizer } from "astro-google-fonts-optimizer";
import config from "@config/config.json";
import theme from "@config/theme.json";
import { plainify } from "@lib/utils/textConverter";
import Footer from "@partials/Footer.astro";
import Header from "@partials/Header.astro";
import { ScrollUpButton } from "@client-components/ScrollUpButton.react";
import {ViewTransitions} from 'astro:transitions';
import "@styles/style.scss";
import CookieConsent from "../layouts/components/CookieConsent.astro";
import bg from "../images/bg.avif"
import { getImage } from "astro:assets"

const MIXPANEL_TOKEN = import.meta.env.MIXPANEL_TOKEN
const bgImg = `url(${(await getImage({ src: bg })).src})`

// font families
const pf = theme.fonts.font_family.primary;
const sf = theme.fonts.font_family.secondary;
const fontUrl = new URL(`https://fonts.googleapis.com/css2?family=${pf}${
        sf ? "&family=" + sf : ""
      }&display=swap`)

export interface Image { 
  src: string; 
  width: number; 
  height: number; 
  format: "png" | "jpg" | "jpeg" | "tiff" | "webp" | "gif" | "svg" | "avif"; 
}

// types for frontmatters
export interface Props {
  title?: string;
  meta_title?: string;
  description?: string;
  image?: Image | string;
  noindex?: boolean;
  canonical?: string;
}

// distructure frontmatters
const { title, meta_title, description, image, noindex, canonical } =
  Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- favicon -->
    <link rel="shortcut icon" href={config.site.favicon} />
    <!-- theme meta -->
    <meta name="theme-name" content="bookworm-light-astro" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#fff"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#000"
    />

    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

    <!-- google font css -->

    <GoogleFontsOptimizer url={fontUrl as any}>
    </GoogleFontsOptimizer>

    <!-- responsive meta -->
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <!-- title -->
    <title>
      {plainify(meta_title ? meta_title : title ? title : config.site.title)}
    </title>
    
    <ViewTransitions />

    <!-- canonical url -->
    {canonical && <link rel="canonical" href={canonical} item-prop="url" />}

    <!-- noindex robots -->
    {noindex && <meta name="robots" content="noindex,nofollow" />}

    <!-- meta-description -->
    <meta
      name="description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />


    <!-- author from config.json -->
    <meta name="author" content={config.metadata.meta_author} />

    <!-- og-title -->
    <meta
      property="og:title"
      content={plainify(
        meta_title ? meta_title : title ? title : config.site.title
      )}
    />

    <!-- og-description -->
    <meta
      property="og:description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`${config.site.base_url}/${Astro.url.pathname.replace("/", "")}`}
    />

    <!-- twitter-title -->
    <meta
      name="twitter:title"
      content={plainify(
        meta_title ? meta_title : title ? title : config.site.title
      )}
    />

    <!-- twitter-description -->
    <meta
      name="twitter:description"
      content={plainify(
        description ? description : config.metadata.meta_description
      )}
    />

    <!-- og-image -->
    <meta
      property="og:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />

    <!-- twitter-image -->
    <meta
      name="twitter:image"
      content={`${config.site.base_url}${
        image ? image : config.metadata.meta_image
      }`}
    />
    <meta name="twitter:card" content="summary_large_image" />

    <script>
      import { type CookieConsentConfig } from "../layouts/components/CookieConsent";
      import { cookie } from "@config/config.json";
      import { cookiePolicyConfig } from "@config/cookiePolicy";

      window.astroCookieConsentConfig = cookiePolicyConfig;

      window.astroCookieConsentOnChange = (state) => {
        console.log("Cookie consent state changed to: ", state);
      };

      window.astroCookieConsentOnAccept = (state) => {
        console.log("astroCookieConsentOnAccept: ", state);
      };

      window.astroCookieConsentOnDeny = (state) => {
        console.log("astroCookieConsentOnDeny: ", state);
      };
    </script>

    <!-- how to change style
    <style>
      :root {
          --cookie-consent-modal-padding: 1rem;
          --cookie-consent-bg: #cc0000;
      }
    </style>
     -->

     <!-- Mixpanel -->
     <script data-astro-cookie-consent="mixpanel" type="text">
      console.log('mixpanel activated');
      (function(f,b){if(!b.__SV){var e,g,i,h;window.mixpanel=b;b._i=[];b.init=function(e,f,c){function g(a,d){var b=d.split(".");2==b.length&&(a=a[b[0]],d=b[1]);a[d]=function(){a.push([d].concat(Array.prototype.slice.call(arguments,0)))}}var a=b;"undefined"!==typeof c?a=b[c]=[]:c="mixpanel";a.people=a.people||[];a.toString=function(a){var d="mixpanel";"mixpanel"!==c&&(d+="."+c);a||(d+=" (stub)");return d};a.people.toString=function(){return a.toString(1)+".people (stub)"};i="disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking start_batch_senders people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove".split(" ");
      for(h=0;h<i.length;h++)g(a,i[h]);var j="set set_once union unset remove delete".split(" ");a.get_group=function(){function b(c){d[c]=function(){call2_args=arguments;call2=[c].concat(Array.prototype.slice.call(call2_args,0));a.push([e,call2])}}for(var d={},e=["get_group"].concat(Array.prototype.slice.call(arguments,0)),c=0;c<j.length;c++)b(j[c]);return d};b._i.push([e,f,c])};b.__SV=1.2;e=f.createElement("script");e.type="text/javascript";e.async=!0;e.src="undefined"!==typeof MIXPANEL_CUSTOM_LIB_URL?MIXPANEL_CUSTOM_LIB_URL:"file:"===f.location.protocol&&"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)?"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js":"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";g=f.getElementsByTagName("script")[0];g.parentNode.insertBefore(e,g)}})(document,window.mixpanel||[]);
    </script>

    <script define:vars={{ MIXPANEL_TOKEN }}>
      window.initMixpanel = () => {
        if (!window._mixpanel_initialized) {
          mixpanel.init(MIXPANEL_TOKEN, { debug: true, track_pageview: true, persistence: 'localStorage' });
          window._mixpanel_initialized = true
        } else {
          mixpanel.track_pageview()
        }
      }
    </script>
  </head>

  <body>
    <CookieConsent />
    <TwSizeIndicator />
    <Header />
    <main id="main-content" class="min-h-[60vh]">
      <slot />
    </main>
    <ScrollUpButton client:only="preact" />
    <Footer />


    <script data-astro-cookie-consent="mixpanel" type="text">
      window.initMixpanel()      
    </script>
  </body>

  <style define:vars={{ bgImg }}>
    body {
      background-image: linear-gradient(
          to bottom,
          rgba(245, 246, 252, 0.85),
          rgba(255, 255, 255, 0.8)
        ), var(--bgImg);
      background-size: cover;
    }
  </style>
</html>
