---
import Share from "@components/Share.astro";
import SimilarPosts from "@components/SimilarPosts.astro";
import { getCollectionEntries } from "@lib/contentParser";
import dateFormat from "@lib/utils/dateFormat";
import similerItems from "@lib/utils/similarItems";
import { humanize, markdownify, slugify } from "@lib/utils/textConverter";
import Cloudinary from "./components/Cloudinary.astro";
import Icon from "./components/Icon.astro";

const allAuthors = await getCollectionEntries("authors");
const posts = await getCollectionEntries("posts");
const { post } = Astro.props;
const similarPosts = similerItems(post, posts, post.slug);
const { Content, remarkPluginFrontmatter } = await post.render();
const { title, description, authors, categories, image, date, tags } =
  post.data;
---

<section class="section">
  <div class="container">
    <article class="row justify-center">
      <div class="text-center md:col-10">
        <h1 set:html={markdownify(title)} class="h2 font-secondary" />
        <ul class="mt-4 flex flex-wrap items-center justify-center text-text">
          <li class="mx-3">
            {
              allAuthors
                .filter((author) =>
                  authors
                    .map((author: string) => slugify(author))
                    .includes(slugify(author.data.title))
                )
                .map((author, i) => (
                  <a
                    href={`/authors/${slugify(author.slug)}`}
                    class="hover:text-primary flex items-center font-medium"
                  >
                    {author.data.image && (
                      <Cloudinary
                        src={author.data.image}
                        alt={author.data.title}
                        height={50}
                        width={50}
                        class="mr-2 h-6 w-6 rounded-full"
                      />
                    )}
                    <span>{author.data.title}</span>
                  </a>
                ))
            }
          </li>
          <li class="mx-3 flex flex-wrap items-center font-medium">
            <Icon name="Calendar" class="mr-1 h-5 w-5 text-gray-600" />
            <>{dateFormat(date)}</>
          </li>

          <li class="mx-3 flex flex-wrap items-center font-medium">
            <Icon name="Time" class="mr-1 h-5 w-5 text-gray-600" />
            {Math.round(remarkPluginFrontmatter?.estReadingTime) || "< 1"} min read
          </li>

          <li class="mx-3 flex flex-wrap items-center">
            <Icon name="Category" class="mr-1 h-[18px] w-[18px] text-gray-600" />
            <>
              <ul>
                {
                  categories.map((category: string, i: number) => (
                    <li class="inline-block">
                      <a
                        href={`/categories/${slugify(category)}`}
                        class="hover:text-primary mr-2 font-medium"
                      >
                        {humanize(category)}
                        {i !== post.data.categories.length - 1 && ","}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </>
          </li>
        </ul>
      </div>

      <div class="col-12 mb-2 mt-8">
        <!-- TODO: image gallery -->
        <Cloudinary src={image} alt={title} class="rounded-lg" />
      </div>

      <div class="md:col-10">
        <div class="content mb-16 text-left">
          <Content />
        </div>
        <div class="flex flex-wrap items-center justify-between">
          <ul class="mb-4 mr-4 space-x-3">
            {
              tags.map((tag: string) => (
                <li class="inline-block">
                  <a
                    href={`/tags/${slugify(tag)}`}
                    class="bg-theme-light text-dark hover:text-primary block rounded-lg px-4 py-2 text-sm font-semibold transition duration-300"
                  >
                    #{humanize(tag)}
                  </a>
                </li>
              ))
            }
          </ul>
          <Share
            className="social-share mb-4"
            title={title}
            description={description}
            slug={post.slug}
          />
        </div>
      </div>
    </article>
  </div>
</section>

<!-- similar posts -->
{
  similarPosts.length > 0 && (
    <section class="section pt-0">
      <div class="container">
        <h2 class="h3 mb-8 text-center">Similar Posts</h2>
        <SimilarPosts posts={similarPosts.slice(0, 3)} />
      </div>
    </section>
  )
}
